# ------------------------------------------------
# asap
# ------------------------------------------------

- wenn Token abläuft dann zum Anmeldebildschirm gehen (überall einbauen -> siehe Resources.js)
  https://stackoverflow.com/questions/47216452/how-to-handle-401-authentication-error-in-axios-and-react

- get role of user -> if Admin: Zugriff auf Settings-Icon in Header

- /logout endpoint -> dann "ThemeLayout.js" fertigmachen (Logout Knopf - diesen auch unter dem Avatar als Submenü: Benutzerprofil | Abmelden)

Global search bei Tabellen -> aktuell noch Probleme beim Seitenwechsel / und nicht alle Spalten durchsuchen wie geändert am, ... !

Pagination !

Excel-Import bei "Messe Statistiken":
- https://www.npmjs.com/package/react-spreadsheet-import
- spannend wie man das eingelesene Excel -> JSON -> dann in tv-tabelle lädt (insert und/oder update)

VA-Liste
- alle Logo's holen und pflegen -> dann auch in Init-Skript schieben !
- View später mal ablösen (doch die irrelevanten auch markieren?)
- make both tables look like separate cards (white background, grey surrounding)

Joe:
- Joe nochmal die Init geben für die internen Applikationen !

- abhängig vom Token die Endpunkte schützen
  - Admin bekommt immer alle Inhalte + hat Änderungsrechte (PUT/POST/DELETE) auf /api/repo
  - User bekommt nur berechtigte Inhalte + /api/crud + GET Rechte auf /api/repo + adhoc wo er Besitzer ist !

- wie lange ist Token gültig? 
  - Token verliert aktuell keine Gültigkeit ?! auch gegen /logout von API gehen !
  - sonst immer folgendes einbauen nach jedem Axios request:
    res.access_token && props.setToken(res.access_token)
  - warum wird nicht der Zusatz 'Bearer ' +  benötigt ?

Audit einbauen d.h. wer ruft wann was auf !

https://dev.to/nagatodev/how-to-add-login-authentication-to-a-flask-and-react-application-23i7

Loginseite ändern z.B. auf https://procomponents.ant.design/en-US/components/login-form#loginformpage-1

CRUD field validation before save (especially required fields) !

/api/crud/DWH.CONFIG.v_portal_veranstaltung?order_by=beginn_dt,ende_dt

        use dwh;

        drop view if exists config.v_portal_veranstaltung;
        create view config.v_portal_veranstaltung
        as
        select 
                vv.veranstaltung_nr 
                , vv.name 
                , vv.status
                , coalesce(vv.url, vr.url) as url
                , vv.jahr
                , vv.beginn_dt 
                , vv.ende_dt 
                , cast(DATEPART(dd, vv.beginn_dt) as varchar(2)) + '.' +  cast(DATEPART(mm, vv.beginn_dt) as varchar(2))
              + ' - ' +
              cast(DATEPART(dd, vv.ende_dt) as varchar(2)) + '.' +  cast(DATEPART(mm, vv.ende_dt) as varchar(2)) + '.' +  cast(DATEPART(yyyy, vv.ende_dt) as varchar(4))
              as zeitraum
            , vr.logo_url
            , case             	
	            when vr.kategorie  = 'EV' then 'Eigenveranstaltung'
	            when vr.kategorie  = 'AV' then 'Auslandsveranstaltung'
	            when vr.kategorie  = 'GV' then 'Gastveranstaltung'
	            when vr.kategorie  = 'CO' then 'Kooperation'
	            else coalesce(vr.kategorie, '(n/a)')
	            end as kategorie
          from dwh.core.vv_veranstaltung vv 
              left outer join dwh.core.vv_veranstaltungsreihe vr on vv.veranstaltungsreihe_id = vr.veranstaltungsreihe_id 
          where 1=1
          and vv.jahr <= year(getdate() ) + 1 -- max. 1 Jahr in die Zukunft schauen
          and vv.veranstaltung_nr not like '%9999%'
          and lower(vv.name) not like '%complimentary%'
          and lower(vv.name) not like '%servicepartner%'
          and lower(vv.name) not like '%ticketshop%'
          and lower(vv.name) not like '%onlineportal%mitarbeiter%'
          and lower(vv.name) not like '%testveranstaltung%'
          and lower(vv.name) not like '%impfzentrum%'
          and lower(vv.name) not like '%cross_check%'
          and lower(vv.name) not like '%fkm_zertifiz%'
          and lower(vv.name) not like '%service_ausweis%'
          and vv.ist_terminal = 'N'
          ;

auf "errors" im body reagieren !

crud ui textarea components
  - Settings.js -> switch back to textarea_sql (lookup) and textarea_json (application) -> state gets lost ?!
  - sql: formatter and validator !
  - json:
    - textarea_json (with formatter and validator)
    - https://sujinleeme.github.io/react-json-editor/ + json schema !
  - monaco-editor evtl. switchen auf https://wangchujiang.com/react-monacoeditor/ ?
  - markdown: erweitern um "remark-gfm"

finish dark mode switch
- put it in user profile page or as menu option when clicking on avatar in upper right corner
- make 3 options: yes / no / browser default
- save setting in repository (table: user_preference)




# ------------------------------------------------
# wait for backend
# ------------------------------------------------

API enhancements:
  - Excel
    - Sheetname: "daten"
      - Headerzeile: Arial, 9, Border unten, Auto filter, Bold, Left (align)
      - Datensätze: Arial, 9
    - zusätzliches Sheet "info"
          Erstellt am: <YYYY-MM-DD HH24:MI:SS>
          Quelle: DWH - Adhoc <nr>
  - Security / Auth-API / JWT Token
    - test JWT with Cube.js :) --> dafür username und gruppen in JWT Token reinbringen ?
    - integrated Users and Roles
      - Admin: Zugriff auf Settings-Icon + App-Icon in Header, Editierbutton bei Adhocliste in Portal (Route /)
      - User
  - Fehlermeldungen als JSON zurückgeben (timestamp, error(s), message(s), detail(s)) (https://www.baeldung.com/rest-api-error-handling-best-practices)
    - get error from API and show it (e.g. wrong datatype, primary key already exists, etc.)

SSL Zertifikat für nginx ?

bundle and run first version on DEV server
  - use flask as webserver ? how to replace "proxy" setting ?
  - make customer CI settings (logo, title, etc.)



# ------------------------------------------------
# Backlog
# ------------------------------------------------

- Filter/Parameter bei Adhoc
- pagination / filter / global search evtl. mal ändern auf backend bei vielen Daten
- textinput_url -> with Link to Target :) (in table and edit dialog)
- getLookups() in CRUDApp.js werden nicht refreshed bei Page-Switch / Dialog-Schliessung / etc.
- add "page" and "file" as resource for documentation, blog, etc.
  page: id, name, alias, parent_page_id, content_as_markdown
  file: id, name, mime_type, content_as_binary
- then add UI for pages and file management (list, update, delete, add)
- Applikationsmetadaten werden bei Repo Init nicht geladen (Fehler) - Adhoc + ext. Ressourcen
- alle API Aufrufe kapseln !! (vor allem das getLookup... Konstrukt zum Austauschen von Lookup-IDs mit Werten in Tables nochmal schöner schreiben)
- Warning: Each child in a list should have a unique "key" prop.
- Security:
  - external Users / Anbindung an AD !
  - SSO
- Swagger UI:
  - https://sean-bradley.medium.com/add-swagger-ui-to-your-python-flask-api-683bfbb32b36
  - https://towardsdatascience.com/working-with-apis-using-flask-flask-restplus-and-swagger-ui-7cf447deda7f
- Datentyp "bit" kann angelegt/editiert werden, aber in der "Table" wird nichts angezeigt (hier kann wohl der Wert true/false nicht interpretiert werden)
- Formitem "email" aktuell identisch zu Textinput -> erweitern um E-mail Validierung
- Tables: Data formats: "datetime" anzeigen ohne Uhrzeit und Millisekunden ?! -> Format angeben in Spezifikation ?
- Tables: Sorting -> show sorted fields with closable tags with icon (asc./desc.) (e.g. "Sortiert nach <Tag1 (auf.)> <Tag2 (ab.)>" - also add "x" button to delete all sorters
- Tables: Filtering
- Tables: Search
- Tables: Pagination
- Apps: Switch einbauen von "Cards" zu "List"
- Home: übergreifende Suche (search bar)
- Home: Filter switchen zwischen "Daten", "Typ"
- Gesamtanzahl Datensätze bei Adhoc anzeigen
- bei Applikations-Spezifikation eine Hilfe einbauen (z.B. Infobutton oder Doku), auch eine Verifiziuerng der Spezifikation, ob sie valide ist.
- bei Modal die Höhe/Breite besser ausnutzen, vor allem bei Textarea's (SQL/JSON/...)
- schöne Spaltennamen bei Adhoc's erlauben?
- "Typ" bei externen Ressourcen vorgeben ? (damit Icon dann auch immer passt)
- Adhoc + ext. Ressource doch in /settings schieben ?
- Fehlerhandling übergreifend konzipieren und umsetzen
- Navbar:   https://medium.com/zestgeek/ant-design-navbar-with-responsive-drawer-a8d718e471e0
- Datenquellenattribut (plainbi_datasource) not used yet in python backend (still in .env file) - datasource_id -> use it everywhere ?!


# ------------------------------------------------
# Backlog (priority low)
# ------------------------------------------------

Apps create/edit dialog:
  - "copy to clipboard" not working ?!
  - add rule to "url": no blanks, no special characters
  - if param "id" is missing -> then mode=create, else mode=edit
      mode=create: no "delete" button
      mode=edit: get metadata of app and fill the form
  - "editing of columns" is missing right now
  - redesign the page UI
