# ------------------------------------------------
# asap
# ------------------------------------------------

AdhocRuntime !
  -> auch switch mit format /adhoc/<id>?format=XLSX|CSV

AppRuntime.js 
- umstellen auf /api/repo/application -> spec_json auslesen !
- alle Applikationen dort mal reinlegen -> an Joe liefern für init_repo
- Adhoc + ext. Ressource erweitenr um Zuordnung zu Gruppen (wg. Berechtigungen !)

alle API Aufrufe kapseln !!

Adhoc + ext. Ressource doch in /settings schieben ?

mit Joe reden: 
  - View für /api/repo/resources
  - Init für Adhoc und ext. Ress. Applikation
  - Excel
    - Sheetname: "daten"
      - Headerzeile: Arial, 9, Border unten, Auto filter, Bold, Left (align)
      - Datensätze: Arial, 9
    - zusätzliches Sheet "info"
          Erstellt am: <YYYY-MM-DD HH24:MI:SS>
          Quelle: DWH - Adhoc <nr>
  - Security / Auth-API / JWT Token
  - swagger-UI
  - Fehlermeldungen als JSON zurückgeben (timestamp, error(s), message(s), detail(s))
    - get error from API and show it (e.g. wrong datatype, primary key already exists, etc.)

homepage
  - switch to "all" resources (application, adhoc, external_resource) -> api endpoint: /api/repo/resources

settings
  - check everything here 

dwh.config.tv_veranstaltungsreihe und ...tv_veranstaltung testen !
dwh.config.tv_mafo_veranstaltung und ...tv_mafo_veranstaltung_land testen !
  -> mit Lookup auf Veranstaltung und Land/Ländergruppe(Inland, Ausland, Gesamt)


act.development.js:209 Warning: Each child in a list should have a unique "key" prop.

generic CRUD App in "runtime" mode:
  - fetch lookup separately
    - in table view
  - Modal / Form
    - field validation before save (especially required fields) !

test all field types: lookup, textarea, textarea_sql, switch, password, email

add description to lookup page (in "settings")

datasource_id -> use it everywhere ?!

plainbi_datasource -> not used yet in python backend (still in .env file)

homepage -> additional tiles (e.g. list of fairs !)

compound primary keys !

add security in python backend
  - use JWT (https://flask-jwt-extended.readthedocs.io/en/stable/)
  - combine with login.js frontend 
  - if possible get JWT in session -> test this with Cube.js :)

bundle and run first version on DEV server
  - use flask as webserver ? how to replace "proxy" setting ?
  - make customer CI settings (logo, title, etc.)


# ------------------------------------------------
# later
# ------------------------------------------------

incremental fields ?!

crud ui textarea components
  - sql: formatter and validator !
  - json:
    - textarea_json (with formatter and validator)
    - https://sujinleeme.github.io/react-json-editor/ + json schema !
  - monaco-editor evtl. switchen auf https://wangchujiang.com/react-monacoeditor/ ?
  - markdown: erweitern um "remark-gfm"

finish dark mode switch
- put it in user profile page or as menu option when clicking on avatar in upper right corner
- make 3 options: yes / no / browser default
- save setting in repository (table: user_preference)

add message/notification overall (see AppRun.js) 
  - catch all errors, especially with API calls

generic CRUD App in "runtime" mode:
  - add pagination
  - add search/filter to table
  - add sorting to table

make everything work :)
  - add live API to (Flask backend) and make CRUD apps generic (runtime)
    - try use case: Adhoc Report Execution (CSV, Excel, JSON>HTML)
    - try use case (generic CRUD): Adhoc Konfig
    - try use case (generic CRUD): DWH Administration

check width'es on all pages !

Adhoc Application --> should be generated with CRUD Template !
  - CRUD page: /apps/adhoc
    - Table with a list of all adhoc + NEW + EDIT + DELETE Buttons
  - CRUD modal or page: /apps/adhoc/<nr>/edit
    - Fields: 
      - Name (text)
      - Button group to select output format: CSV|Excel|HTML
      - Query (title)
      - Query (textbox) with "copy code" button in upper right corner and SQL syntax highlighting
      - SAVE + DELETE buttons

Home:
  - table width ?!
  - make both tables look like separate cards (white background, grey surrounding)

Apps create/edit dialog:
  - "copy to clipboard" not working ?!
  - add rule to "url": no blanks, no special characters
  - if param "id" is missing -> then mode=create, else mode=edit
      mode=create: no "delete" button
      mode=edit: get metadata of app and fill the form
  - "editing of columns" is missing right now
  - redesign the page UI


/apps/adhoc/<nr>
  - Loading Component throws error ?!
  - Table: make pagination dynamic
  - Add sorting and filtering
  - Make height 100% with minimum of 500?

Home > Table:
  - sorting doesn't work
  - add link to the "name" to /apps/adhoc/<nr>/export?format=<outputformat>

Apps list:
  - add switch from cards to list

zusätzliche Ressourcen auf Homeseite neben den Adhoc's (Cognos, Looker Datastudio, ...)
  - vorerst in einer Tabelle pflegen, auch mit Berechtigung

Security:
	- integrated Users and Roles
    - Admin: Zugriff auf Settings-Icon + App-Icon in Header, Editierbutton bei Adhocliste in Portal (Route /)
	  - User
  - external Users / Anbindung an AD !
  - SSO
  - API securen mit JWT, ...?

Portal: 
- add search bar

Links:
- Navbar:   https://medium.com/zestgeek/ant-design-navbar-with-responsive-drawer-a8d718e471e0
