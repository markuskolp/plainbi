# ------------------------------------------------
# asap
# ------------------------------------------------

Joe wg. order by bei Adhocs -> wie lösen? -> Messe Stat Adhocs anpassen

Adhoc:
- Params einbauen (ähnlich zu Aditus Selektionsmaske)
- server side pagination einbauen !
- sortier icons fehlen ? (CRUDPage.js Sortierung in die Table.js bringen !)

customsql testen

Filter in Spaltentitel erlauben
  - get distinct values of each column -> heavy loading ?! or just do it with pulled dataset (even if it just has a pagination of 20) ?

asap
- POST - erkennt nicht, dass es einen Eintrag schon gab -> meldet erfolgreich zurück
- wenn Token abläuft dann zum Anmeldebildschirm gehen (überall einbauen -> siehe Resources.js)
  https://stackoverflow.com/questions/47216452/how-to-handle-401-authentication-error-in-axios-and-react
  - sonst immer folgendes einbauen nach jedem Axios request:
    res.access_token && props.setToken(res.access_token)
  - https://dev.to/nagatodev/how-to-add-login-authentication-to-a-flask-and-react-application-23i7

CRUD Aufrufe zum Testen !

eigene Table/SQL Angabe für Summary/Listview bei CRUD (bei Application > Page, damit man das Lookup-Problem vereinfachen kann (sowohl beim Laden, als auch bei Sortierung, Filterung, etc.))
  - Order: klappt bei Lookup-Spalten nicht z.B. Veranstaltungsnr !

Subpage ermöglichen
- dann bei Adhoc z.B. die Berechtigung und Aufrufe damit abbilden - auch Messe Statistik Pflegemaske

Home
- make both tables look like separate cards (white background, grey surrounding)
- VA-View später mal ablösen (doch die irrelevanten auch markieren?)

Joe:
- Joe nochmal die Init geben für die internen Applikationen !
- Audit: 
  - bei Login nicht im Body das pw mitschreiben !
  - bei Adhoc immer die ID auch mitschreiben !

CRUD field validation before save (especially required fields) !



# Views für Portal Homepage

      /api/crud/DWH.CONFIG.v_portal_veranstaltung?order_by=beginn_dt,ende_dt

      use dwh;

      drop view if exists config.v_portal_veranstaltung;
        create view config.v_portal_veranstaltung
                as
                select 
                        vv.veranstaltung_nr 
                        , vv.name 
                        , vv.status
                        , coalesce(vv.url, vr.url) as url
                        , vv.jahr
                        , vv.beginn_dt 
                        , vv.ende_dt 
                        , cast(DATEPART(dd, vv.beginn_dt) as varchar(2)) + '.' +  cast(DATEPART(mm, vv.beginn_dt) as varchar(2))
                      + ' - ' +
                      cast(DATEPART(dd, vv.ende_dt) as varchar(2)) + '.' +  cast(DATEPART(mm, vv.ende_dt) as varchar(2)) + '.' +  cast(DATEPART(yyyy, vv.ende_dt) as varchar(4))
                      as zeitraum
                    , vr.logo_url as logo_url
                    , case             	
                      when vr.kategorie  = 'EV' and vl.in_ausland = 'Inland' then 'Eigenveranstaltung'
                      when vr.kategorie  = 'EV' and vl.in_ausland = 'Ausland' then 'Eigenveranstaltung Ausland'
                      when vr.kategorie  = 'GV' then 'Gastveranstaltung'
                      else 'Sonst'
                      end as kategorie
              , vl.land
              , coalesce(vl.in_ausland, '(n/a)') in_ausland
                  from dwh.core.vv_veranstaltung vv 
                      left outer join dwh.core.vv_veranstaltungsreihe vr on vv.veranstaltungsreihe_id = vr.veranstaltungsreihe_id 
                      left outer join dwh.core.vv_land vl on vv.land_id  = vl.land_id 
                  where 1=1
                  and vv.jahr <= year(getdate() ) + 1 -- max. 1 Jahr in die Zukunft schauen
                  and vv.jahr >= year(getdate() ) -5 -- max. 5 Jahre in die Vergangenheit schauen
                  and vv.veranstaltung_nr not like '%9999%'
                  and lower(vv.name) not like '%complimentary%'
                  and lower(vv.name) not like '%servicepartner%'
                  and lower(vv.name) not like '%ticketshop%'
                  and lower(vv.name) not like '%onlineportal%mitarbeiter%'
                  and lower(vv.name) not like '%testveranstaltung%'
                  and lower(vv.name) not like '%impfzentrum%'
                  and lower(vv.name) not like '%cross_check%'
                  and lower(vv.name) not like '%fkm_zertifiz%'
                  and lower(vv.name) not like '%service_ausweis%'
                  and vv.ist_terminal = 'N'
                  and vv.veranstaltung_id != -1
                  ;

# Views für Applikation "Veranstaltung"

        use dwh;
        drop view if exists config.v_portal_kfg_veranstaltungsreihe;
        create view config.v_portal_kfg_veranstaltungsreihe
        as
        select 
          kfg.veranstaltungsreihe_nr
          , vr.name as veranstaltungsreihe
          , kfg.code
          , 'Geschäftsbereich (' + kfg.geschaeftsbereich + ')' as geschaeftsbereich
          , case when kfg.kategorie = 'EV' then 'Eigenveranstaltung' when kfg.kategorie = 'GV' then 'Gastveranstaltung' else kfg.kategorie end as kategorie
          , kfg.ist_konfiguriert  
        from DWH.config.vv_kfg_veranstaltungsreihe kfg
          left outer join DWH.core.vv_veranstaltungsreihe vr on kfg.veranstaltungsreihe_nr = vr.veranstaltungsreihe_nr  
        ;

        drop view if exists config.v_portal_kfg_veranstaltung;
        create view config.v_portal_kfg_veranstaltung
        as
        select 
          kfg.veranstaltung_nr
          , va.name as veranstaltung
          , kfg.code
          , kfg.veranstalter_nr 
          , l.land
          , kfg.ist_terminal 
          , vva.name as relevante_vorveranstaltung 
          , kfg.ist_konfiguriert 
        from DWH.config.vv_kfg_veranstaltung kfg
          left outer join DWH.core.vv_veranstaltung va on kfg.veranstaltung_nr = va.veranstaltung_nr  
          left outer join DWH.core.vv_veranstaltung vva on kfg.relevante_vorveranstaltung_nr = vva.veranstaltung_nr  
          left outer join DWH.core.vv_land l on kfg.land_iso2 = l.land_iso2 
        ;

        select * from config.v_portal_kfg_veranstaltungsreihe
        ;
        select * from config.v_portal_kfg_veranstaltung
        ;



# Views für Applikation "Messe Statistiken"

        drop view if exists config.v_portal_messe_statistik_status;
        create view config.v_portal_messe_statistik_status
        as
        select 
          m.veranstaltung_nr 
          , va.name as veranstaltung
          , case when m.status = 'VORLAEUFIG' then 'vorläufig' when m.status = 'FINAL' then 'final' when m.status = 'FINAL_FKM_GEPRUEFT' then 'final (FKM geprüft)' else m.status end as status
        from DWH.config.vv_messe_statistik_status m
                  left outer join DWH.core.vv_veranstaltung va on m.veranstaltung_nr = va.veranstaltung_nr  
        ;


        drop view if exists config.v_portal_messe_statistik_daten;
        create view config.v_portal_messe_statistik_daten
        as
        select 
          m.veranstaltung_nr 
          , va.name as veranstaltung
          , m.land_iso2 
          , l.land
          , m.besucher_anzahl
          , m.fachbesucher_anteil_in_proz 
          , m.aussteller_anzahl 
          , m.zusaetzlich_vertretene_unternehmen 
          , m.flaeche_aussteller_halle 
          , m.flaeche_aussteller_freigelaende 
          , m.flaeche_sonderschau 
          , m.flaeche_netto 
          , m.flaeche_brutto 
        from DWH.config.vv_messe_statistik_daten m
                  left outer join DWH.core.vv_veranstaltung va on m.veranstaltung_nr = va.veranstaltung_nr  
                  left outer join DWH.core.vv_land l on m.land_iso2 = l.land_iso2 
        ;


auf "errors" im body reagieren !

crud ui textarea components
  - Settings.js -> switch back to textarea_sql (lookup) and textarea_json (application) -> state gets lost ?!
  - sql: formatter and validator !
  - json:
    - textarea_json (with formatter and validator)
    - https://sujinleeme.github.io/react-json-editor/ + json schema !
  - monaco-editor evtl. switchen auf https://wangchujiang.com/react-monacoeditor/ ?
  - markdown: erweitern um "remark-gfm"


# ------------------------------------------------
# wait for backend
# ------------------------------------------------

API enhancements:
  - Security / Auth-API / JWT Token
    - test JWT with Cube.js :) --> dafür username und gruppen in JWT Token reinbringen ?
    - integrated Users and Roles
      - Admin: Zugriff auf Settings-Icon + App-Icon in Header, Editierbutton bei Adhocliste in Portal (Route /)
      - User
  - Fehlermeldungen als JSON zurückgeben (timestamp, error(s), message(s), detail(s)) (https://www.baeldung.com/rest-api-error-handling-best-practices)
    - get error from API and show it (e.g. wrong datatype, primary key already exists, etc.)



# ------------------------------------------------
# Backlog
# ------------------------------------------------

- optimize CRUDPage.js customsql and lookup -> better define when which one is active ...
- finish dark mode switch
  - put it in user profile page or as menu option when clicking on avatar in upper right corner
  - make 3 options: yes / no / browser default
  - save setting in repository (table: user_preference)
- Authentifizierung/Authorisierung besser kapseln (Token, Role, ...)
- Loginseite ändern z.B. auf https://procomponents.ant.design/en-US/components/login-form#loginformpage-1
- Excel-Import bei "Messe Statistiken":
  - https://www.npmjs.com/package/react-spreadsheet-import
  - spannend wie man das eingelesene Excel -> JSON -> dann in tv-tabelle lädt (insert und/oder update)
- Filter/Parameter bei Adhoc
- pagination / filter / global search evtl. mal ändern auf backend bei vielen Daten
- textinput_url -> with Link to Target :) (in table and edit dialog)
- getLookups() in CRUDApp.js werden nicht refreshed bei Page-Switch / Dialog-Schliessung / etc.
- add "page" and "file" as resource for documentation, blog, etc.
  page: id, name, alias, parent_page_id, content_as_markdown
  file: id, name, mime_type, content_as_binary
- then add UI for pages and file management (list, update, delete, add)
- Applikationsmetadaten werden bei Repo Init nicht geladen (Fehler) - Adhoc + ext. Ressourcen
- alle API Aufrufe kapseln !! (vor allem das getLookup... Konstrukt zum Austauschen von Lookup-IDs mit Werten in Tables nochmal schöner schreiben)
- Warning: Each child in a list should have a unique "key" prop.
- Security:
  - external Users / Anbindung an AD !
  - SSO
- Swagger UI:
  - https://sean-bradley.medium.com/add-swagger-ui-to-your-python-flask-api-683bfbb32b36
  - https://towardsdatascience.com/working-with-apis-using-flask-flask-restplus-and-swagger-ui-7cf447deda7f
- Datentyp "bit" kann angelegt/editiert werden, aber in der "Table" wird nichts angezeigt (hier kann wohl der Wert true/false nicht interpretiert werden)
- Formitem "email" aktuell identisch zu Textinput -> erweitern um E-mail Validierung
- Tables: Data formats: "datetime" anzeigen ohne Uhrzeit und Millisekunden ?! -> Format angeben in Spezifikation ?
- Tables: Sorting -> show sorted fields with closable tags with icon (asc./desc.) (e.g. "Sortiert nach <Tag1 (auf.)> <Tag2 (ab.)>" - also add "x" button to delete all sorters
- Tables: Filtering
- Tables: Search
- Tables: Pagination
- Apps: Switch einbauen von "Cards" zu "List"
- Home: übergreifende Suche (search bar)
- Home: Filter switchen zwischen "Daten", "Typ"
- Gesamtanzahl Datensätze bei Adhoc anzeigen
- bei Applikations-Spezifikation eine Hilfe einbauen (z.B. Infobutton oder Doku), auch eine Verifiziuerng der Spezifikation, ob sie valide ist.
- bei Modal die Höhe/Breite besser ausnutzen, vor allem bei Textarea's (SQL/JSON/...)
- schöne Spaltennamen bei Adhoc's erlauben?
- "Typ" bei externen Ressourcen vorgeben ? (damit Icon dann auch immer passt)
- Adhoc + ext. Ressource doch in /settings schieben ?
- Fehlerhandling übergreifend konzipieren und umsetzen
- Navbar:   https://medium.com/zestgeek/ant-design-navbar-with-responsive-drawer-a8d718e471e0
- Datenquellenattribut (plainbi_datasource) not used yet in python backend (still in .env file) - datasource_id -> use it everywhere ?!


# ------------------------------------------------
# Backlog (priority low)
# ------------------------------------------------

Apps create/edit dialog:
  - "copy to clipboard" not working ?!
  - add rule to "url": no blanks, no special characters
  - if param "id" is missing -> then mode=create, else mode=edit
      mode=create: no "delete" button
      mode=edit: get metadata of app and fill the form
  - "editing of columns" is missing right now
  - redesign the page UI
