# sqllite repo init, list of commands to be execute in sqlite db
[
'''
drop table if exists plainbi_seq
''',
'''
create table plainbi_seq (
  sequence_name text primary key not null  
 ,curval int not null
)
''',
'''
drop table if exists plainbi_role
''',
'''
create table plainbi_role (
  id int primary key not null
 ,name text  -- Admin User
)
''',
'''
INSERT INTO plainbi_role (id,name) VALUES (1,'Admin');
''',
'''
INSERT INTO plainbi_role (id,name) VALUES (2,'User');
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('role',2);
''',

'''
drop table if exists plainbi_user
''',
'''
create table plainbi_user (
  id int primary key not null 
 ,username text
 ,email text
 ,fullname text
 ,password_hash text
 ,role_id int
 ,FOREIGN KEY (role_id) REFERENCES plainbi_role(id)
)
''',
'''
insert into plainbi_user (id,username,password_hash,role_id) values (1,'admin','$2b$12$fb81v4oi7JdcBIofmi/JoeHfAK0WJUo7Mq648C2dAiewztltywHHu',1)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('user',1)
''',
'''
drop table if exists plainbi_group
''',
'''
create table plainbi_group (
  id int primary key not null
 ,name text
 ,alias text UNIQUE
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('group',0)
''',

'''
drop table if exists plainbi_user_to_group
''',
'''
create table plainbi_user_to_group (
  user_id int not null
 ,group_id int not null
 ,primary key (user_id,group_id)
 ,FOREIGN KEY (user_id) REFERENCES plainbi_user(id)
 ,FOREIGN KEY (group_id) REFERENCES plainbi_group(id)
)
''',

'''
drop table if exists plainbi_datasource
''',
'''
create table plainbi_datasource (
  id int primary key not null
 ,name text
 ,alias text UNIQUE
 ,db_type text  -- db_types enum mssql,postgres,mysql,oracle,sqllite
 ,db_host text 
 ,db_port text 
 ,db_name text
 ,db_user text
 ,db_pass_hash text
)
''',
'''
insert into plainbi_datasource (id,alias,name) values (0,'repo','internal repository')
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('datasource',0)
''',

'''
drop table if exists plainbi_application
''',
'''
create table plainbi_application(
  id int primary key not null
 ,name text
 ,alias text UNIQUE
 ,spec_json text
 ,datasource_id int
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('application',0)
''',
'''
drop table if exists plainbi_application_to_group
''',
'''
create table plainbi_application_to_group (
  application_id int not null
 ,group_id int not null
 ,primary key (application_id,group_id)
 ,FOREIGN KEY (group_id) REFERENCES plainbi_group(id)
)
''',
'''
drop table if exists plainbi_lookup
''',
'''
create table plainbi_lookup (
  id int primary key not null
 ,name text
 ,alias text UNIQUE
 ,sql_query text
 ,datasource_id int
 ,FOREIGN KEY (datasource_id) REFERENCES plainbi_datasource(id)
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('lookup',0)
''',

'''
drop table if exists plainbi_external_resource
''',
'''
create table plainbi_external_resource (
  id int primary key not null
 ,name text
 ,alias text UNIQUE
 ,url text
 ,description text
 ,source text
 ,dataset text
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('external_resource',0)
''',

'''
drop table if exists plainbi_external_resource_to_group
''',
'''
create table plainbi_external_resource_to_group (
  external_resource_id int not null
 ,group_id int
 ,primary key (external_resource_id,group_id)
 ,FOREIGN KEY (external_resource_id) REFERENCES plainbi_external_resource(id)
 ,FOREIGN KEY (group_id) REFERENCES plainbi_group(id)
)
''',
'''
drop table if exists plainbi_adhoc
''',
'''
create table plainbi_adhoc (
  id int primary key not null
 ,name varchar
 ,alias text UNIQUE
 ,sql_query varchar
 ,output_format text -- enum outputformats -- HTML Excel CSV
 ,datasource_id int
 ,owner_user_id int
 ,order_by_default varchar
 ,description varchar
 ,owner_department varchar
 ,sensitive_data text
 ,reason text
 ,FOREIGN KEY (datasource_id) REFERENCES plainbi_datasource(id)
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('adhoc',0)
''',
'''
drop table if exists plainbi_adhoc_to_group
''',
'''
create table plainbi_adhoc_to_group (
  adhoc_id int not null 
 ,group_id int not null
 ,primary key (adhoc_id,group_id)
 ,FOREIGN KEY (group_id) REFERENCES plainbi_group(id)
 ,FOREIGN KEY (adhoc_id) REFERENCES plainbi_adhoc(id)
)
''',
'''
-- application: adhoc, external_resource
INSERT INTO plainbi_application (id,name,alias,spec_json,datasource_id) VALUES
       (-100,'Adhoc Konfiguration','adhoc','{
         "id":"2",
         "name":"Adhoc Konfiguration",
         "alias":"adhoc",
         "pages":[
            {
               "id":"1",
               "name":"Adhocs",
               "alias":"all",
               "allowed_actions":[
                  "create",
                  "update",
                  "delete"
               ],
               "datasource":"repo",
               "pk_columns":["id"],
               "table":"adhoc",
               "table_columns":[
                  {
                     "column_name":"id",
                     "column_label":"ID",
                     "datatype":"number",
                     "editable":"false",
                     "required":"true"
                  },
                  {
                     "column_name":"name",
                     "column_label":"Adhoc Name",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"description",
                     "column_label":"Beschreibung",
                     "ui":"textarea",
                     "datatype":"text",
                     "editable":"true",
                     "required":"false",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"owner_user_id",
                     "column_label":"Besitzer",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"user",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"owner_department",
                     "column_label":"Anforderer",
                     "datatype":"text",
                     "ui":"lookupn",
                     "lookup":"user",
                     "editable":"true",
                     "required":"false",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"sensitive_data",
                     "column_label":"Sensible Daten",
                     "ui":"textinput",
                     "datatype":"text",
                     "editable":"true",
                     "required":"false",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"reason",
                     "column_label":"Begründung für Nutzung",
                     "ui":"textarea",
                     "datatype":"text",
                     "editable":"true",
                     "required":"false",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"sql_query",
                     "column_label":"SQL Abfrage",
                     "datatype":"text",
                     "ui":"textarea",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"order_by_default",
                     "column_label":"Default-Sortierung",
                     "ui":"textinput",
                     "datatype":"text",
                     "editable":"true",
                     "required":"false",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"output_format",
                     "column_label":"Ausgabeformat",
                     "ui":"lookup",
                     "lookup":"output_format",
                     "datatype":"text",
                     "editable":"true",
                     "required":"true"
                  },
                  { 
                     "column_name": "datasource_id", 
                     "column_label": "Datenquelle", 
                     "datatype": "number", 
                     "ui": "lookup", 
                     "lookup": "datasource", 
                     "editable": "true", 
                     "required": "true" 
                  }
               ]
            },
            {
               "id":"2",
               "name":"Berechtigung",
               "alias":"rights",
               "datasource":"repo",
               "allowed_actions":[
                  "create", 
                  "delete"
               ],
               "pk_columns":["adhoc_id","group_id"],
               "table_for_list":"v_adhoc_to_group",
               "table":"adhoc_to_group",
               "table_columns":[
                  {
                     "column_name":"adhoc_id",
                     "column_label":"Adhoc",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"adhoc",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"group_id",
                     "column_label":"Gruppe",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"group",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"adhoc_name",
                     "column_label":"Adhoc",
                     "datatype":"text",
                     "ui":"label",
                     "editable":"false",
                     "required":"false",
                     "showsummaryonly":"true"
                  },
                  {
                     "column_name":"group_name",
                     "column_label":"Gruppe",
                     "datatype":"text",
                     "ui":"label",
                     "editable":"false",
                     "required":"false",
                     "showsummaryonly":"true"
                  }
               ]
            },
            {
               "id":"3",
               "name":"Parameter",
               "alias":"parameter",
               "datasource":"repo",
               "allowed_actions":[
                  "create", 
                  "delete",
               "update"
               ],
               "pk_columns":["id"],
               "table":"adhoc_parameter",
               "table_columns":[
                  {
                     "column_name":"id",
                     "column_label":"ID",
                     "datatype":"number",
                     "editable":"false",
                     "required":"true"
                  },
                  {
                     "column_name":"name",
                     "column_label":"Name",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"name_technical",
                     "column_label":"Name (Platzhalter im SQL)",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"true"
                  },
               {
                     "column_name":"adhoc_id",
                     "column_label":"Adhoc",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"adhoc",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"datatype",
                     "column_label":"Datentyp",
                     "datatype":"text",
                     "ui":"lookup",
                  "lookup":"datatype",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"ui",
                     "column_label":"UI",
                     "datatype":"text",
                     "ui":"lookup",
                     "lookup":"ui_for_parameter",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"lookup",
                     "column_label":"Lookup",
                     "datatype":"text",
                     "ui":"lookup",
                     "lookup":"lookup_for_parameter",
                     "editable":"true",
                     "required":"false"
                  },
                  {
                     "column_name":"default_value",
                     "column_label":"Standardwert (initial)",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"false"
                  },
                  {
                     "column_name":"required",
                     "column_label":"Mussfeld",
                     "datatype":"boolean",
                     "ui":"switch",
                     "editable":"true",
                     "required":"false"
                  }
               ]
            },
            {
               "id":"4",
               "datasource":"repo",
               "name":"Aufrufe",
               "alias":"audit",
               "allowed_actions":[
               ],
               "pk_columns":["user","datum","adhoc_id"],
               "table":"audit_adhoc",
               "table_columns":[
                  {
                     "column_name":"user_name",
                     "column_label":"User",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"false",
                     "required":"false"
                  },
                  {
                     "column_name":"datum",
                     "column_label":"Datum",
                     "datatype":"date",
                     "ui":"datepicker",
                     "editable":"false",
                     "required":"false"
                  },
                  {
                     "column_name":"adhoc_id",
                     "column_label":"Adhoc ID",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"false",
                     "required":"false"
                  },
                  {
                     "column_name":"adhoc_name",
                     "column_label":"Adhoc Name",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"false",
                     "required":"false"
                  },
                  {
                     "column_name":"ausgabeformat",
                     "column_label":"Ausgabeformat",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"false",
                     "required":"false"
                  }
               ]
            }
         ]
      }',0),
       (-101,'externe Ressourcen','ext_res','{
         "pages":[
            {
               "id":"1",
               "name":"externe Ressourcen",
               "alias":"all",
               "allowed_actions":[
                  "create",
                  "update",
                  "delete"
               ],
               "datasource":"repo",
               "pk_columns":["id"],
               "table":"external_resource",
               "table_columns":[
                  {
                     "column_name":"id",
                     "column_label":"ID",
                     "datatype":"number",
                     "editable":"false",
                     "required":"true"
                  },
                  {
                     "column_name":"name",
                     "column_label":"Name",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"url",
                     "column_label":"Aufruf URL",
                     "datatype":"text",
                     "ui":"textinput",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"description",
                     "column_label":"Beschreibung",
                     "ui":"textarea_markdown",
                     "datatype":"text",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"source",
                     "column_label":"Quelle / System",
                     "ui":"textinput",
                     "datatype":"text",
                     "editable":"true",
                     "required":"true"
                  },
                  {
                     "column_name":"dataset",
                     "column_label":"Datensatz",
                     "ui":"textinput",
                     "datatype":"text",
                     "editable":"true",
                     "required":"true"
                  }
               ]
            },
            {
               "id":"2",
               "name":"Berechtigung",
               "alias":"rights",
               "allowed_actions":[
                  "create",
                  "update",
                  "delete"
               ],
               "datasource":"repo",
               "pk_columns":["external_resource_id","group_id"],
               "table_for_list":"v_external_resource_to_group",
               "table":"external_resource_to_group",
               "table_columns":[
                  {
                     "column_name":"external_resource_id",
                     "column_label":"Ext. Ressource",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"external_resource",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
                  {
                     "column_name":"group_id",
                     "column_label":"Gruppe",
                     "datatype":"number",
                     "ui":"lookup",
                     "lookup":"group",
                     "editable":"true",
                     "required":"true",
                     "showdetailsonly":"true"
                  },
               {
                     "column_name":"externalresource_name",
                     "column_label":"Ext. Ressource",
                     "datatype":"text",
                     "ui":"label",
                     "editable":"false",
                     "required":"false",
                     "showsummaryonly":"true"
                  },
               {
                     "column_name":"group_name",
                     "column_label":"Gruppe",
                     "datatype":"text",
                     "ui":"label",
                     "editable":"false",
                     "required":"false",
                     "showsummaryonly":"true"
                  }
      
               ]
            }
         ]
      }',0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-100, 'output_format', 'select ''HTML'' as d, ''HTML'' as r union select ''Excel'' as d, ''XLSX'' as r union select ''CSV'' as d, ''CSV'' as r', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-101, 'datasource', 'select name as d, id as r from plainbi_datasource', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-102, 'db_type', 'select ''SQLite'' as d, ''sqlite'' as r union select ''MS SQL Server'' as d, ''mssql'' as r', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-103, 'user', 'select coalesce(fullname || ''('' || username || '')'', username) as d, id as r from plainbi_user', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-104, 'group', 'select name as d, id as r from plainbi_group', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-105, 'application', 'select name as d, id as r from plainbi_application', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-106, 'role', 'select name as d, id as r from plainbi_role', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-107, 'adhoc', 'select name as d, id as r from plainbi_adhoc', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-108, 'external_resource', 'select name as d, id as r from plainbi_external_resource', 0);
''',
'''
insert into plainbi_lookup (id, alias, sql_query , datasource_id ) values (-109, 'username', 'select fullname || ''('' || username || '')'' as d, username as r from plainbi_user where username != ''admin'';', 0);
''',
'''
drop view if exists plainbi_resources;
''',
'''
drop table if exists plainbi_audit
''',
'''
create table plainbi_audit (
  username varchar
 ,t TIMESTAMP
 ,url varchar
 ,id varchar
 ,remark varchar
 ,request_method varchar
 ,request_body varchar
)
''',
'''
DROP VIEW IF EXISTS plainbi_audit_adhoc;
''',
'''
create view plainbi_audit_adhoc
as
select 
  coalesce(concat(u.fullname, ' (', u.username, ' - id: ', u.id, ')'), u.username) as user_name
, u.username  
, a.t as datum
, a.id as adhoc_id
, pa.name as adhoc_name
, case 
when a.url like '%XLSX' then 'Excel'
when a.url like '%CSV' then 'CSV'
when a.url like '%HTML' then 'HTML'
else 'HTML' 
end as ausgabe_format
from plainbi_audit a, plainbi_user u, plainbi_adhoc pa 
where 1=1
and a.username = u.username
and a.id = pa.id
and url like '%/api/repo/adhoc/%/data%'
order by a.t desc;
''',
'''
DROP VIEW IF EXISTS plainbi_v_adhoc_to_group;
''',
'''
create view plainbi_v_adhoc_to_group
as
select 
    eg.adhoc_id  , eg.group_id
    , e.name as adhocname
    , concat(e.name, ' (id: ', e.id, ')') as adhoc_name
    , g.name as groupname
    , concat(g.name, ' (id: ', g.id, ')') as group_name
from plainbi_adhoc_to_group eg
    join plainbi_adhoc e on eg.adhoc_id = e.id
    join plainbi_group g on eg.group_id = g.id
''',
'''
DROP VIEW IF EXISTS plainbi_v_external_resource_to_group;
''',
'''
create view plainbi_v_external_resource_to_group
as
select 
    eg.external_resource_id  , eg.group_id
    , e.name as externalresourcename
    , concat(e.name, ' (id: ', e.id, ')') as externalresource_name
    , g.name as groupname
    , concat(g.name, ' (id: ', g.id, ')') as group_name
--    , string_agg(lower(u.username), ', ') as user_in_group
--    , string_agg(coalesce(concat(u.fullname, ' (', u.username, ' - id: ', u.id, ')'), u.username), ', ') as username_in_group
from plainbi_external_resource_to_group eg
    join plainbi_external_resource e on eg.external_resource_id = e.id
    join plainbi_group g on eg.group_id = g.id
--    left join plainbi_user_to_group ug on g.id = ug.group_id 
--    left join plainbi_user u on ug.user_id = u.id
--group by    
--    eg.external_resource_id, eg.group_id
--    , e.name, e.id
--    , g.name, g.id
''',
'''
DROP VIEW IF EXISTS plainbi_v_application_to_group;
''',
'''
create view plainbi_v_application_to_group
as
select 
    ag.application_id  , ag.group_id
    , a.name as applicationname
    , concat(a.name, ' (id: ', a.id, ')') as application_name
    , g.name as groupname
    , concat(g.name, ' (id: ', g.id, ')') as group_name
from plainbi_application_to_group ag
    join plainbi_application a on ag.application_id = a.id
    join plainbi_group g on ag.group_id = g.id
''',
'''
DROP VIEW IF EXISTS plainbi_v_user_to_group;
''',
'''
create view plainbi_v_user_to_group
as
select 
    ug.user_id , ug.group_id
    , u.username
    , coalesce(concat(u.fullname, ' (', u.username, ' - id: ', u.id, ')'), u.username) as user_name
    , g.name as groupname
    , concat(g.name, ' (id: ', g.id, ')') as group_name
from plainbi_user_to_group ug
    join plainbi_user u on ug.user_id = u.id 
    join plainbi_group g on ug.group_id = g.id
''',
'''
drop table if exists plainbi_customsql
''',
'''
create table plainbi_customsql (
  id int primary key not null
 ,alias text UNIQUE
 ,name varchar
 ,sql_query varchar
)
''',
'''
insert into plainbi_seq (sequence_name,curval) values ('customsql',0)
''',
'''
drop table if exists plainbi_adhoc_parameter
''',
'''
CREATE TABLE plainbi_adhoc_parameter (
  id int primary key not null,
  name varchar,
  name_technical varchar,
  adhoc_id int,
  datatype varchar,
  ui varchar,
  lookup varchar,
  default_value varchar,
  required varchar
);
''',
'''
insert into plainbi_seq (sequence_name, curval) values ('adhoc_parameter', 0);
''',
'''
insert into plainbi_lookup (id, name, alias, sql_query, datasource_id) values (-110, null, 'ui_for_parameter', 'select ''textinput'' as r, ''Eingabefeld (Text)'' as d union select ''numberinput'' as r, ''Eingabefeld (Zahl)'' as d union select ''datepicker'' as r, ''Datumsauswahl'' as d union select ''lookup'' as r, ''Lookup'' as d', 0);
''',
'''
insert into plainbi_lookup (id, name, alias, sql_query, datasource_id) values (-111, null, 'lookup_for_parameter', 'select case when name is null then alias else name || '' ('' || alias || '')'' end as d, alias as r from plainbi_lookup', 0);
''',
'''
insert into plainbi_lookup (id, name, alias, sql_query, datasource_id) values (-112, null, 'datatype', 'select ''text'' as r, ''Text'' as d union select ''number'' as r, ''Zahl'' as d union select ''date'' as r, ''Datum'' as d', 0);
''',
'''
drop table if exists plainbi_static_file
''',
'''
CREATE TABLE plainbi_static_file (
  id int primary key not null,
  name varchar,
  alias varchar,
  mimetype varchar,
  content_base64 text
);
''',
'''
insert into plainbi_static_file (id,name,alias,mimetype,content_base64)
values (-1,'logo','logo','image/png',
'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'
)
''',
'''
insert into plainbi_static_file (id,name,alias,mimetype,content_base64)
values (-2,'favicon','favicon','image/x-icon',
'AAABAAEAEBAAAAEAIABoBAAAFgAAACg
)
''',
'''
drop table if exists plainbi_settings
''',
'''
CREATE TABLE plainbi_settings (
  setting_name varchar primary key,
  setting_value text
);
''',
'''
insert into plainbi_settings values ('app_title','plainbi')
''',
'''
insert into plainbi_settings values ('header_title','')
''',
'''
insert into plainbi_settings values ('footer','')
''',
'''
insert into plainbi_settings values ('environment_banner_text',null)
''',
'''
insert into plainbi_settings values ('environment_banner_color',null)
''',
'''
insert into plainbi_settings values ('color_primary','#6a91ce')
''',
'''
insert into plainbi_settings values ('color_success','#91c311')
''',
'''
insert into plainbi_settings values ('color_error','#b31013')
''',
'''
insert into plainbi_settings values ('color_info','#3b80e0')
''',
'''
insert into plainbi_settings values ('font_size','13')
''',
]
